создать конфиг в которой будет хранится информация о пользователе
copy nul .config
 
далее нужно добавить информацию о пользователе 
git config --global user.name "Your Name"
git config --global user.email "your_email@example.com"

что бы узнать информацию о пользователе 
git config --list --global

нужно создать папку где будет хранится ваш репозиторий
названия моей папки testing  
cd C:\Users\user\git\tetsting команда  для того что бы попасть в папку через конфиг

для того что бы скопировать удаленый репозиторий 
git clone (ссылка на репозиторий) 
git clone https://github.com/femid1488/tetsting

что бы отслеживать изменения 
git status

создаем файл.txt добваляем любой  текст, и для того чтобы нам сохранить изменения 
git add файл.txt
  
далее вводим команду git status и убеждаемся в том что все изменения сохранены
для того что бы откатить изменения после его сохранения 
git restore --stage файл.txt

для того что бы отправить все наши зменения в нашу ветку в удаленный репозиторий, а тоесть отправить commit 
git commit -m "(коментарий)"

для подтверждения отправки 
git push

                                                                                  работа git bash here 

для того что бы посмотреть что находится внутри файла 
cat файл.txt 

для того что бы сравить удаленный репозиторий и наш локальный 
git fetch

и для того что бы посмотреть чем отличаются наши репозитории вводим 
git status 

и для того что бы нам обновить наш локальный репозиторий на тот что на ходится удаленно 
git pull 
после этого появляется уникальный номер нашего коммита пример Updating 59e636a..8418e0f 

для того что бы просмотреть все комиты и информацию о их изменениях 
git log для того что бы прекратить просмотр  нажать на q

для того что бы посмотреть какие изменения проводил коллега 
git log --author (его имя) - git log --author vadim

для того что бы проверить содержания коммита 
git show (хэш комита commit fc4f182c74c7c3248dfe4b0a27199a7bf888d22f)
git show fc4f182c74c7c3248dfe4b0a27199a7bf888d22f мы увидим информацию которая привязана к этому комиту
так же можно вести git show без хэша комита и вам отобразится информация о последнем комите в который вносились изменения 

так же можно посмотреть информацию о авторе строки в файле 
git blame file4.txt

так же мы можем добавлять строки в определенный файл  
echo "new line" >> file4.txt

так же мы можем посмотреть последние изменения с помощью другой команды 
git diff

